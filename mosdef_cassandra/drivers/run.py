
import parmed

def generate_inp_nvt(species,box,temperature,length,**kwargs):

    inp_data = """
! Generated by on"""

    # Extract information and add defaults
    if 'run_name' not in kwargs:
        run_name = 'nvt'
    inp_data += write_inp.run_name(run_name)
    inp_data += write_inp.sim_type('nvt_mc')

    nbr_species = len(species)
    inp_data += write_inp.nbr_species(nbr_species)

    # VDW Style
    if 'vdw_style' not in kwargs:
        vdw_style = 'lj'
    if 'cutoff_style' not in kwargs:
        cutoff_style = 'cut_tail'
    if 'cutoff' not in kwargs:
        cutoff = 12.0
    inp_data += write_inp.vdw_style([vdw_style],[cutoff_style],[cutoff])

    # Charge Style
    if 'charge_style' not in kwargs:
        charge_style = 'ewald'
    if 'ewald_accuracy' not in kwargs:
        ewald_accuracy = 1.0e-5

    inp_data += write_inp.charge_style([charge_style],[cutoff],
            ewald_accuracy=ewald_accuracy)

    if 'mixing_rule' not in kwargs:
        mixing_rule = 'lb'
    inp_data += write_inp.mixing_rule(mixing_rule)

    if 'seeds' not in kwargs:
        seed1 = None
        seed2 = None
    inp_data += write_inp.seed_info(seed1,seed2)

    if 'rcut_min' not in kwargs:
        rcut_min = 1.0
    inp_data += write_inp.minimum_cutoff(rcut_min)

    if 'pair_energy' not in kwargs:
        pair_energy=True
    inp_data += write_inp.pair_energy(pair_energy)

    # TODO: think harder about this section
    #if 'molecule_files' not in kwargs:

    inp_data += box_info([box])
    inp_data += temperature_info([temperature])

    # TODO: These are wrong. Cannot rotate single point
    # and want to make regrowth probs dependent on conc
    # and cannot regrow monatomic, linear, or rigid species
    if 'max_displacements' not in kwargs:
        max_displacements = [2.0]*nbr_species
    if 'max_rotations' not in kwargs:
        max_rotations = [30.]*nbr_species
    if 'regrow_probs' not in kwargs:
        regrow_probs = [1.0/nbr_species]*nbr_species

    inp_data += write_inp.move_probability_info(
            trans=[0.35,max_displacements],
            rot=[0.35,max_rotations],
            regrow=[0.3,regrow_probs])

    if 'start_type' not in kwargs:
        start_type = 'make_config'

    inp_data += write_inp.start_type([start_type])

    if 'run_type' not in kwargs:
        run_type = 'equilibration'
    if 'properties' not in kwargs:
        properties = 'all'

    inp_data += write_inp.run_type(run_type,100)

    inp_data += write_inp.properties(properties)
